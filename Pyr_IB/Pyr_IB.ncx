<?xml version="1.0" encoding="UTF-8"?>
<java version="1.6.0_24" class="java.beans.XMLDecoder">

<!-- This is a neuroConstruct project file. It's best to open this
file with neuroConstruct, as opposed to editing it directly. 

Note that this file is neuroConstruct specific and isn't any 
part of NeuroML or any standardised XML specification. -->

 <object class="ucl.physiol.neuroconstruct.project.BasicProjectInfo">
  <void property="projectDescription">
   <string>This is a project implementing cells from the thalamocortical network model of Traub et al 2005 in NeuroML. Based on the NEURON implementation from: http://senselab.med.yale.edu/ModelDB/ShowModel.asp?model=45539. This model can be run on NEURON, GENESIS and MOOSE (though not yet PSICS as calcium dynamics aren&apos;t supported). It can also be used to generate a smaller version of the Layer 2/3 network model described in Cunningham et al 2004.
 
The Default Simulation Configuration contains a single compartment cell model containing all of the 22 active channels (plus a passive conductance and a calcium pool) as used in the more detailed cell models. To run this simulation through the neuroConstruct interface, click on tab Generate, select Default Simulation Configuration, press Generate, go to tab Export -&gt; NEURON, press Create hoc simulation, and run the simulation (or do the equivalent at tab GENESIS; MOOSE can be generated at that tab too).

The Simulation Configurations CellX-xxx-Figxx etc. attempt to reproduce the figures for cell behaviour in Appendix A of Traub et al 2005. The sim configs CellX-xxx-10ms etc. had been used for comparison to the cell behaviour in the NEURON download from ModelDB, but have not all been kept up to date. 

*****  NOTE!  *****
Most of the cells have a spatial discretisation which will allow single cell simulations to run in a reasonable time (a few minutes). However, most cells will require a greater spatial discretisation (and/or smaller timestep) to ensure NEURON, GENESIS and MOOSE simulations are in close alignment. See Help -&gt; Glossary -&gt; Electrotonic length.

The simulation configuration CunninghamEtAl04_small generates a 56 cell Layer 2/3 network based on Cunningham Et Al 2004. This simulation too requires a much finer spatial discretisation and a small dt (~0.001) to get precise spike time agreement across simulators.

Other simulation configurations are present for testing a lagre scale thalamocortical network version of the model, but are not yet stable.</string>
  </void>
  <void property="projectFileVersion">
   <string>neuroConstruct v1.6.0</string>
  </void>
  <void property="projectName">
   <string>Pyr_IB</string>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.RegionsInfo">
  <void property="internalData">
   <void method="get">
    <string>Name</string>
    <void method="add">
     <string>Regions_1</string>
    </void>
   </void>
   <void method="get">
    <string>Colour</string>
    <void method="add">
     <object class="java.awt.Color">
      <int>255</int>
      <int>255</int>
      <int>255</int>
      <int>255</int>
     </object>
    </void>
   </void>
   <void method="get">
    <string>Description</string>
    <void method="add">
     <object class="ucl.physiol.neuroconstruct.project.RectangularBox">
      <void property="parameterList">
       <void index="3">
        <void property="value">
         <float>120.0</float>
        </void>
       </void>
       <void index="4">
        <void property="value">
         <float>50.0</float>
        </void>
       </void>
       <void index="5">
        <void property="value">
         <float>120.0</float>
        </void>
       </void>
      </void>
     </object>
    </void>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.CellGroupsInfo">
  <void property="internalData">
   <void method="get">
    <string>Cell Packing Adapter</string>
    <void method="add">
     <object class="ucl.physiol.neuroconstruct.project.packing.RandomCellPackingAdapter"/>
    </void>
   </void>
   <void method="get">
    <string>Cell Type</string>
    <void method="add">
     <string>L5TuftedPyrRS</string>
    </void>
   </void>
   <void method="get">
    <string>Priority</string>
    <void method="add">
     <int>10</int>
    </void>
   </void>
   <void method="get">
    <string>Colour</string>
    <void method="add">
     <object class="java.awt.Color">
      <int>37</int>
      <int>122</int>
      <int>234</int>
      <int>255</int>
     </object>
    </void>
   </void>
   <void method="get">
    <string>Region Name</string>
    <void method="add">
     <string>Regions_1</string>
    </void>
   </void>
   <void method="get">
    <string>Cell Group Name</string>
    <void method="add">
     <string>CellGroup_1</string>
    </void>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.SimPlotInfo">
  <void property="allSimPlots">
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimPlot">
     <void property="cellGroup">
      <string>CellGroup_1</string>
     </void>
     <void property="cellNumber">
      <string>*</string>
     </void>
     <void property="graphWindow">
      <string>CellGroup_1_v</string>
     </void>
     <void property="maxValue">
      <float>50.0</float>
     </void>
     <void property="minValue">
      <float>-90.0</float>
     </void>
     <void property="plotAndOrSave">
      <string>Plot and save</string>
     </void>
     <void property="plotReference">
      <string>CellGroup_1_v</string>
     </void>
     <void property="segmentId">
      <string>0</string>
     </void>
    </object>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.ProjectProperties"/>
 <object class="ucl.physiol.neuroconstruct.utils.Display3DProperties">
  <void property="antiAliasing">
   <int>1</int>
  </void>
  <void property="backgroundColour3D">
   <object class="java.awt.Color">
    <int>0</int>
    <int>0</int>
    <int>0</int>
    <int>255</int>
   </object>
  </void>
  <void property="cellColour3D">
   <object class="java.awt.Color">
    <int>255</int>
    <int>255</int>
    <int>255</int>
    <int>255</int>
   </object>
  </void>
  <void property="displayOption">
   <string>Soma solid, neurite lines</string>
  </void>
  <void property="minRadius">
   <float>2.0</float>
  </void>
  <void property="resolution3DElements">
   <int>10</int>
  </void>
  <void property="showInputs">
   <boolean>false</boolean>
  </void>
  <void property="showSynapseConns">
   <boolean>false</boolean>
  </void>
  <void property="showSynapseEndpoints">
   <boolean>false</boolean>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.neuron.NeuronSettings">
  <void property="copySimFiles">
   <boolean>true</boolean>
  </void>
  <void property="generateComments">
   <boolean>false</boolean>
  </void>
  <void property="nativeBlocks">
   <void method="put">
    <float>10.0</float>
    <string>//forall print secname(), &quot;: &quot;, cai


#SIM_CONFIG_INCLUDE Default Simulation Configuration

// Note this block is only included in the generated NEURON code for Sim Config: Default Simulation Configuration

print &quot;&quot;
print &quot;&quot;
print &quot;&quot;
print &quot;**************************&quot;
print &quot;  NOTE: when comparing ChannelML mechanisms to the original mod file&quot;
print &quot;  implementations, be sure to *unselect* the Force correct ChannelML&quot;
print &quot;  initialisation checkbox in neuroConstruct, as many of the original mod &quot;
print &quot;  files do not correctly set the values for m, n, etc. at t=0 (may be due to&quot;
print &quot;  mod files mimicing original Fortran). This option should be selected&quot;
print &quot;  when comparing the ChannelML implementations on NEURON and&quot;
print &quot;  GENESIS&quot;
print &quot;**************************&quot;
print &quot;&quot;


#END_SIM_CONFIG_INCLUDE Default Simulation Configuration

print &quot;Version info: &quot;, nrnversion()

objref strFuncs
strFuncs = new StringFunctions()

if(strFuncs.substr(nrnversion(), &quot;VERSION 7&quot;) &gt;=0 || strFuncs.substr(nrnversion(), &quot;Release 7&quot;) &gt;=0) {
    print &quot;*******************&quot;
    print &quot;***  NOTE: These cell models have only been tested so far on NEURON version 6.2!&quot;
    print &quot;*******************&quot;
}
</string>
   </void>
   <void method="put">
    <float>3.0</float>
    <string></string>
   </void>
   <void method="put">
    <float>-1.0</float>
    <string></string>
   </void>
   <void method="put">
    <float>1.0</float>
    <string>

// Just left in for testing purposes. [Ca2+] is initialised to rest_conc of cell mechanism cad (=0) anyway...

forall if (ismembrane(&quot;ca_ion&quot;)) {
	//print &quot;Changing eca in: &quot;, secname()
	///eca = 125
	if (init_cai &gt; 0) {
	    //print &quot;Changing cai in: &quot;, secname()
	    cai = init_cai  // defined earlier
	}
    }



</string>
   </void>
   <void method="put">
    <float>2.0</float>
    <string>
</string>
   </void>
   <void method="put">
    <float>0.0</float>
    <string>
// Just left in for testing purposes. [Ca2+] is initialised to rest_conc of cell mechanism cad (=0) anyway...

init_cai = 00

forall if (ismembrane(&quot;ca_ion&quot;)) {
    if (init_cai &gt; 0) {
        print &quot;Changing initial cai in: &quot;, secname(), &quot; to &quot;, init_cai,&quot; before INITIAL calls, so correct val of cai is used there...&quot;
        cai = init_cai
    }
}</string>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.genesis.GenesisSettings">
  <void property="absRefractSpikegen">
   <float>0.5</float>
  </void>
  <void property="generateComments">
   <boolean>false</boolean>
  </void>
  <void property="nativeBlocks">
   <void method="put">
    <int>10</int>
    <string>str someTempCompName

float restCa = 0
float initCa = 0


if ({exists  /cells/CG_CML})

    foreach someTempCompName ({el /cells/CG_CML/#/#})

         if ({exists  {someTempCompName}/cad})
	
            echo &quot;&quot;
            echo &quot;Resetting Ca resting conc of: &quot; {someTempCompName}/cad

            if (units == &quot;GENESIS Physiological Units&quot;)
                setfield {someTempCompName}/cad C   {{initCa - restCa} / 1000000}
                setfield {someTempCompName}/cad Ca {initCa / 1000000}
            else
                setfield {someTempCompName}/cad C {initCa - restCa}
                setfield {someTempCompName}/cad Ca {initCa}
            end

            echo &quot;Now, Ca = &quot; {getfield {someTempCompName}/cad Ca }
            echo &quot;Now, C = &quot; {getfield {someTempCompName}/cad C }

            echo &quot;&quot;

        end

    end

end

</string>
   </void>
   <void method="put">
    <int>5</int>
    <string>

float factor = 1

if (units == &quot;GENESIS SI Units&quot;)
    factor = 0.001
end


str tempCompName
str tempCellName
str tempCellGroupName

/* Now ion rev pots stored in ionProperties on each cell...

foreach tempCellGroupName ({el /cells/#})

foreach tempCellName ({el {tempCellGroupName}/#})

    float ek = -95

    if ({strcmp {getfield {tempCellName} celltype} &quot;SupLTSInter&quot;} == 0 || \
        {strcmp {getfield {tempCellName} celltype} &quot;DeepLTSInter&quot;} == 0 || \
        {strcmp {getfield {tempCellName} celltype} &quot;DeepBasket&quot;} == 0 || \
        {strcmp {getfield {tempCellName} celltype} &quot;SupBasket&quot;} == 0 || \
        {strcmp {getfield {tempCellName} celltype} &quot;DeepAxAx&quot;} == 0 || \
        {strcmp {getfield {tempCellName} celltype} &quot;SupAxAx&quot;} == 0 || \
        {strcmp {getfield {tempCellName} celltype} &quot;L4SpinyStellate&quot;} == 0 || \
        {strcmp {getfield {tempCellName} celltype} &quot;nRT&quot;} == 0 || \
        {strcmp {getfield {tempCellName} celltype} &quot;nRT_minus75init&quot;} == 0 )

        ek = -100
        echo &quot;Changing ek to &quot;  {ek*factor}  &quot; in cell: &quot; {tempCellName} &quot; which is of type: &quot;  {getfield {tempCellName} celltype}

    end

        foreach tempCompName ({el {tempCellName}/#})

            //echo &quot;Checking comp: &quot; {tempCompName}
            
            if ({exists {tempCompName}/km})
                setfield {tempCompName}/km Ek {ek*factor}
                //echo &quot;Setting ek to: &quot; {ek*factor} &quot; in &quot; {tempCompName}
            end
            if ({exists {tempCompName}/k2})
                setfield {tempCompName}/k2 Ek {ek*factor}
            end
            if ({exists {tempCompName}/ka})
                setfield {tempCompName}/ka Ek {ek*factor}
            end
            if ({exists {tempCompName}/ka_ib})
                setfield {tempCompName}/ka_ib Ek {ek*factor}
            end
            if ({exists {tempCompName}/kahp})
                setfield {tempCompName}/kahp Ek {ek*factor}
            end
            if ({exists {tempCompName}/kahp_deeppyr})
                setfield {tempCompName}/kahp_deeppyr Ek {ek*factor}
            end
            if ({exists {tempCompName}/kahp_slower})
                setfield {tempCompName}/kahp_slower Ek {ek*factor}
            end
            if ({exists {tempCompName}/kc})
                setfield {tempCompName}/kc Ek {ek*factor}
            end
            if ({exists {tempCompName}/kc_fast})
                setfield {tempCompName}/kc_fast Ek {ek*factor}
            end
            if ({exists {tempCompName}/kdr})
                setfield {tempCompName}/kdr Ek {ek*factor}
            end
            if ({exists {tempCompName}/kdr_fs})
                setfield {tempCompName}/kdr_fs Ek {ek*factor}
            end
            if ({exists {tempCompName}/km})
                setfield {tempCompName}/km Ek {ek*factor}
            end
            
        end

end
end

*/

</string>
   </void>
   <void method="put">
    <int>15</int>
    <string>str chanName

    foreach chanName ( { el /cells/CGspinstell/CGspinstell_0/#/cad}  )

        	//showfield {chanName} *
	//echo {chanName} : {getfield {chanName} Ca}
    end
</string>
   </void>
   <void method="put">
    <int>1</int>
    <string></string>
   </void>
   <void method="put">
    <int>-1</int>
    <string></string>
   </void>
  </void>
  <void property="unitSystemToUse">
   <int>3</int>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.psics.PsicsSettings"/>
 <object class="ucl.physiol.neuroconstruct.simulation.SimulationParameters">
  <void property="dt">
   <float>0.025</float>
  </void>
  <void property="duration">
   <float>100.0</float>
  </void>
  <void property="maxElectroLen">
   <float>0.01</float>
  </void>
  <void property="minElectroLen">
   <float>1.0E-5</float>
  </void>
  <void property="reference">
   <string>C3D_125</string>
  </void>
  <void property="saveCopyGenSimFiles">
   <boolean>true</boolean>
  </void>
  <void property="whatToRecord">
   <int>2</int>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.ElecInputInfo">
  <void property="allStims">
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.simulation.IClampSettings">
     <void property="amp">
      <void property="fixedNum">
       <float>0.2</float>
      </void>
     </void>
     <void property="cellGroup">
      <string>CellGroup_1</string>
     </void>
     <void property="del">
      <void property="fixedNum">
       <float>0.0</float>
      </void>
     </void>
     <void property="dur">
      <void property="fixedNum">
       <float>500.0</float>
      </void>
      <void property="numberType">
       <int>11</int>
      </void>
     </void>
     <void property="reference">
      <string>Input_0</string>
     </void>
    </object>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.SimConfigInfo">
  <void property="allSimConfigs">
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="description">
      <string>This is the default Simulation Configuration. It is used to compare behaviour of channels as expressed in ChannelML when mapped to NEURON &amp; GENESIS. It features a single compartment cell with all of the channels as used in the cell models. Note the closeness of the traces for voltage, calcium concentration, etc. between NEURON &amp; GENESIS will be improved with smaller simulation timestep.</string>
     </void>
     <void property="inputs">
      <void method="add">
       <string>Input_0</string>
      </void>
     </void>
     <void property="name">
      <string>Default Simulation Configuration</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>500.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="inputs">
      <void method="add">
       <string>Input_0</string>
      </void>
     </void>
     <void property="name">
      <string>input0</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>500.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>input1</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>500.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>input2</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>500.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>input3</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>500.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>quant1</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>600.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>quant2</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>600.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>quant3</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>600.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>quant4</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>600.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>quant5</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>600.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>quant6</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>600.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>quant7</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>600.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>quant8</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>600.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>quant9</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>600.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>quant10</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>600.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>quant11</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>600.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="inputs">
      <void method="add">
       <string>Input_0</string>
      </void>
     </void>
     <void property="name">
      <string>input0_without</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>500.0</float>
     </void>
    </object>
   </void>
   <void method="add">
    <object class="ucl.physiol.neuroconstruct.project.SimConfig">
     <void property="cellGroups">
      <void method="add">
       <string>CellGroup_1</string>
      </void>
     </void>
     <void property="name">
      <string>input3_without</string>
     </void>
     <void property="plots">
      <void method="add">
       <string>CellGroup_1_v</string>
      </void>
     </void>
     <void property="simDuration">
      <float>500.0</float>
     </void>
    </object>
   </void>
  </void>
 </object>
 <object class="ucl.physiol.neuroconstruct.project.SimpleNetworkConnectionsInfo"/>
 <object class="ucl.physiol.neuroconstruct.project.ArbourConnectionsInfo"/>
</java>
