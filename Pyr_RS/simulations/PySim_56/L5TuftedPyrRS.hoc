
//  ******************************************************
//
//     File generated by: neuroConstruct v1.6.0
//
//     Generally replicates hoc for Cell Type as exported from
//     NEURON's Cell Builder, together with some neuroConstruct
//     specific helper/info procedures, e.g. toString(), netInfo()
//
//  ******************************************************


begintemplate L5TuftedPyrRS

public init, topol, basic_shape, subsets, geom, memb
public synlist, x, y, z, position, connect2target

public reference, type, description, name
strdef reference, type, description, name

public toString, netInfo

public all

objref synlist
objref all
objref stringFuncs

public soma_group
objref soma_group
public soma_dendrite
objref soma_dendrite
public soma2
objref soma2
public axon_group
objref axon_group
public dendrite_group
objref dendrite_group
public dendrites2
objref dendrites2
public dendrites3
objref dendrites3

proc init() {
    topol()
    subsets()
    geom()
    biophys()
    geom_nseg()
    synlist = new List()
    x = y = z = 0
    reference = $s1
    type = $s2
    description = $s3
    
    strdef indexNum
    stringFuncs = new StringFunctions()
    stringFuncs.tail(reference, "_", indexNum)
    while (stringFuncs.substr( indexNum, "_")>=0) {
        stringFuncs.tail(indexNum, "_", indexNum)
    }
    
    sprint(name, "%s", type)
}

create comp_1
public comp_1
create comp_56
public comp_56
create comp_35
public comp_35
create comp_6
public comp_6
create comp_5
public comp_5
create comp_4
public comp_4
create comp_3
public comp_3
create comp_57
public comp_57
create comp_36
public comp_36
create comp_12
public comp_12
create comp_7
public comp_7

proc topol() {
    connect comp_56(0), comp_1(0.0)
    connect comp_35(0), comp_1(1.0)
    connect comp_6(0), comp_1(1.0)
    connect comp_5(0), comp_1(1.0)
    connect comp_4(0), comp_1(1.0)
    connect comp_3(0), comp_1(1.0)
    connect comp_57(0), comp_56(1.0)
    connect comp_36(0), comp_35(1.0)
    connect comp_12(0), comp_35(1.0)
    connect comp_7(0), comp_35(1.0)
    basic_shape()
}

proc basic_shape() {
    comp_1 {pt3dclear() pt3dadd(0.0, 0.0, 0.0, 18.0) pt3dadd(0.0, 12.5, 0.0, 18.0)}
    comp_1 {pt3dadd(-0.0, 25.0, 0.0, 18.0)}
    comp_56 {pt3dclear() pt3dadd(0.0, 0.0, 0.0, 1.8) pt3dadd(12.5, 0.0, 0.0, 1.8)}
    comp_56 {pt3dadd(25.0, 0.0, 0.0, 1.8)}
    comp_35 {pt3dclear() pt3dadd(-0.0, 25.0, 0.0, 4.0) pt3dadd(-0.0, 62.5, 0.0, 4.0)}
    comp_35 {pt3dadd(-0.0, 100.0, 0.0, 4.0)}
    comp_6 {pt3dclear() pt3dadd(-0.0, 25.0, 0.0, 1.7) pt3dadd(0.0, 7.0, -24.0, 1.7)}
    comp_6 {pt3dadd(0.0, -11.0, -48.0, 1.7)}
    comp_5 {pt3dclear() pt3dadd(-0.0, 25.0, 0.0, 1.7) pt3dadd(-24.0, 7.0, 0.0, 1.7)}
    comp_5 {pt3dadd(-48.0, -11.0, 0.0, 1.7)}
    comp_4 {pt3dclear() pt3dadd(-0.0, 25.0, 0.0, 1.7) pt3dadd(0.0, 7.0, 24.0, 1.7)}
    comp_4 {pt3dadd(0.0, -11.0, 48.0, 1.7)}
    comp_3 {pt3dclear() pt3dadd(-0.0, 25.0, 0.0, 1.7) pt3dadd(24.0, 7.0, 0.0, 1.7)}
    comp_3 {pt3dadd(48.0, -11.0, 0.0, 1.7)}
    comp_57 {pt3dclear() pt3dadd(25.0, 0.0, 0.0, 1.4) pt3dadd(50.0, 0.0, 0.0, 1.4)}
    comp_36 {pt3dclear() pt3dadd(-0.0, 100.0, 0.0, 3.8) pt3dadd(-0.0, 137.50002, 0.0, 3.8)}
    comp_12 {pt3dclear() pt3dadd(-0.0, 100.0, 0.0, 1.24) pt3dadd(30.0, 100.0, 0.0, 1.24)}
    comp_7 {pt3dclear() pt3dadd(-0.0, 100.0, 0.0, 1.24) pt3dadd(-30.0, 100.0, 0.0, 1.24)}
}

proc subsets() { local i

    all = new SectionList()


    soma_group = new SectionList()

    comp_1 soma_group.append()


    soma_dendrite = new SectionList()

    comp_1 soma_dendrite.append()
    comp_35 soma_dendrite.append()
    comp_6 soma_dendrite.append()
    comp_5 soma_dendrite.append()
    comp_4 soma_dendrite.append()
    comp_3 soma_dendrite.append()
    comp_36 soma_dendrite.append()
    comp_12 soma_dendrite.append()
    comp_7 soma_dendrite.append()


    soma2 = new SectionList()

    comp_1 soma2.append()


    axon_group = new SectionList()

    comp_56 axon_group.append()
    comp_57 axon_group.append()


    dendrite_group = new SectionList()

    comp_35 dendrite_group.append()
    comp_6 dendrite_group.append()
    comp_5 dendrite_group.append()
    comp_4 dendrite_group.append()
    comp_3 dendrite_group.append()
    comp_36 dendrite_group.append()
    comp_12 dendrite_group.append()
    comp_7 dendrite_group.append()


    dendrites2 = new SectionList()

    comp_35 dendrites2.append()
    comp_4 dendrites2.append()
    comp_3 dendrites2.append()
    comp_36 dendrites2.append()
    comp_12 dendrites2.append()
    comp_7 dendrites2.append()


    dendrites3 = new SectionList()

    comp_6 dendrites3.append()
    comp_5 dendrites3.append()


    comp_1 all.append()
    comp_56 all.append()
    comp_35 all.append()
    comp_6 all.append()
    comp_5 all.append()
    comp_4 all.append()
    comp_3 all.append()
    comp_57 all.append()
    comp_36 all.append()
    comp_12 all.append()
    comp_7 all.append()
}

proc geom() {
}

proc biophys() {
    forsec soma_group cm = 0.9
    forsec soma_dendrite Ra = 250.0
    forsec axon_group cm = 1.8
    forsec axon_group Ra = 100.0
    forsec dendrite_group cm = 1.8

    forsec all {         insert pas  {     // Ignoring gmax (-100000.0) for this channel mechanism
 }    e_pas = -70.0  // note: this is val from ChannelML, may be reset later

    }

    forsec all {         insert naf  { 
    // Ignoring gmax (-100000.0) for this channel mechanism

    a_naf = 0.0
    b_naf = 0.0
    c_naf = 0.0
    d_naf = 0.0
    fastNa_shift_naf = -3.5 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma_group {         insert k2  { gmax_k2 = 5.0E-5 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma_dendrite {         insert ar  { 
    // Ignoring gmax (-100000.0) for this channel mechanism

    m0_ar = 0.25 }          ear = -35.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma2 {         insert pas  { g_pas = 2.0E-8 }  
    }

    forsec soma2 {         insert kc  { gmax_kc = 0.0288 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma2 {         insert ar  { gmax_ar = 1.0E-5 }  
    }

    forsec soma2 {         insert km  { gmax_km = 0.085 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma2 {         insert cad  { 
    beta_cad = 0.01
    phi_cad = 4333.33 }  
    }

    forsec soma2 {         insert cat  { gmax_cat = 1.0E-4 }          ecat = 125.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma2 {         insert kahp_deeppyr  { gmax_kahp_deeppyr = 2.0E-4 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma2 {         insert ka  { gmax_ka = 0.02 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma2 {         insert naf  { gmax_naf = 20.0 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma2 {         insert cal  { gmax_cal = 1.6E-5 }          eca = 125.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma2 {         insert nap  { gmax_nap = 1.6E-4 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma2 {         insert kdr  { gmax_kdr = 17.0 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec axon_group {         insert km  { gmax_km = 0.3 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec axon_group {         insert pas  { g_pas = 1.0E-6 }  
    }

    forsec axon_group {         insert kdr  { gmax_kdr = 45.0 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec axon_group {         insert naf  { gmax_naf = 45.0 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec axon_group {         insert ka  { gmax_ka = 6.0E-4 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec dendrite_group {         insert kc  { gmax_kc = 0.012 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    addChanMechs_0()  // Spliting function to prevent errors when proc too big
}

proc addChanMechs_0() {

    forsec dendrite_group {         insert nap  { gmax_nap = 1.0E-4 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec dendrite_group {         insert kahp_deeppyr  { gmax_kahp_deeppyr = 4.0E-4 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec dendrite_group {         insert k2  { gmax_k2 = 1.0E-4 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec dendrite_group {         insert ka  { gmax_ka = 0.016 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec dendrite_group {         insert kdr  { gmax_kdr = 15.0 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec dendrite_group {         insert pas  { g_pas = 3.0E-7 }  
    }

    forsec dendrite_group {         insert ar  { gmax_ar = 2.0E-5 }  
    }

    forsec dendrite_group {         insert km  { gmax_km = 0.075 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec dendrite_group {         insert cal  { gmax_cal = 3.2E-6 }          eca = 125.0  // note: this is val from ChannelML, may be reset later

    }

    forsec dendrite_group {         insert naf  { gmax_naf = 18.75 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec dendrite_group {         insert cat  { gmax_cat = 2.0E-4 }          ecat = 125.0  // note: this is val from ChannelML, may be reset later

    }

    forsec dendrites2 {         insert cad  { 
    beta_cad = 0.075
    phi_cad = 86666.7 }  
    }

    forsec dendrites3 {         insert cad  { 
    beta_cad = 0.02
    phi_cad = 86666.7 }  
    }

    forsec all { ena = 50.0}

    forsec all { ek = -95.0}

}

proc geom_nseg() {
    comp_56 nseg = 12
    comp_35 nseg = 21
    comp_6 nseg = 26
    comp_5 nseg = 26
    comp_4 nseg = 26
    comp_3 nseg = 26
    comp_57 nseg = 14
    comp_36 nseg = 11
    comp_12 nseg = 15
    comp_7 nseg = 15
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}

proc connect2target() {   //$o1 target point process, $o2 returned NetCon

    comp_1 $o2 = new NetCon(&v(1), $o1)
}

proc toString() {
    strdef info
    sprint(info, "Cell ref: %s (%s), at: (%d, %d, %d)", reference, name, x, y, z)
    print info
}

proc netInfo() {
    strdef info
    sprint(info, "Cell reference: %s, type: %s", reference, type)
    print "--------  ",info
    print "    There are ", synlist.count(), " connections in ", synlist
    for i=0,synlist.count()-1 {
        print "        Connection from ", synlist.o[i].precell, " to: ", synlist.o[i].postcell
        print "        Pre:   Weight: ", synlist.o[i].weight, ", delay: ", synlist.o[i].delay, ", threshold: ", synlist.o[i].threshold 
        print "        Post:  ", synlist.o[i].syn(), ", gmax: ", synlist.o[i].syn().gmax , ", e: ", synlist.o[i].syn().e , ", rise time: ", synlist.o[i].syn().tau_rise , ", decay time: ", synlist.o[i].syn().tau_decay 
    print " "
    }
    
    
    
    print "--------  "
    print " "
}


endtemplate L5TuftedPyrRS

