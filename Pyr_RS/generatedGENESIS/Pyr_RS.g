//  ******************************************************
// 
//     File generated by: neuroConstruct v1.5.2
// 
//  ******************************************************

randseed 839471121
float celsius = 6.3

str units = "GENESIS SI Units"

str genesisCore = "GENESIS2"

include nCtools 

include compartments 

if (!{exists /library})
    create neutral /library
end

disable /library
pushe /library
make_cylind_compartment
make_cylind_symcompartment
pope

include cat
make_cat

include nap
make_nap

include kdr
make_kdr

include ar
make_ar

include km
make_km

include pas
make_pas

include cad
make_cad

include ka
make_ka

include kc
make_kc

include naf
make_naf

include kahp_deeppyr
make_kahp_deeppyr

include cal
make_cal

include k2
make_k2

copy /library/cad /library/cad__-1865483743
setfield /library/cad__-1865483743 beta 20.0 
init_cad /library/cad__-1865483743

copy /library/naf /library/naf__-2138440619
setfield /library/naf__-2138440619 a 0.0 
setfield /library/naf__-2138440619 b 0.0 
setfield /library/naf__-2138440619 c 0.0 
setfield /library/naf__-2138440619 d 0.0 
setfield /library/naf__-2138440619 fastNa_shift -3.5 
init_naf /library/naf__-2138440619

copy /library/cad /library/cad__-1849377615
setfield /library/cad__-1849377615 beta 75.0 
init_cad /library/cad__-1849377615

copy /library/ar /library/ar__218603037
setfield /library/ar__218603037 Ek -0.035 
setfield /library/ar__218603037 m0 0.25 
init_ar /library/ar__218603037

copy /library/pas /library/pas__e_-70
setfield /library/pas__e_-70 Ek -0.07 

copy /library/cad /library/cad__-1909645461
setfield /library/cad__-1909645461 beta 10.0 
init_cad /library/cad__-1909645461



create neutral /cells


create neutral /cells/CellGroup_1

str compName

readcell /media/data/Reduction_paper/Pyr_RS/simulations/C3D_107/L5TuftedPyrRS.p /cells/CellGroup_1/CellGroup_1_0
addfield /cells/CellGroup_1/CellGroup_1_0 celltype
setfield /cells/CellGroup_1/CellGroup_1_0 celltype L5TuftedPyrRS

str tempChanName

foreach tempChanName ({el /cells/CellGroup_1/CellGroup_1_0/#/cad__-1865483743})
    move {tempChanName} {getpath {tempChanName} -head}cad
end

foreach tempChanName ({el /cells/CellGroup_1/CellGroup_1_0/#/naf__-2138440619})
    move {tempChanName} {getpath {tempChanName} -head}naf
end

foreach tempChanName ({el /cells/CellGroup_1/CellGroup_1_0/#/cad__-1849377615})
    move {tempChanName} {getpath {tempChanName} -head}cad
end

foreach tempChanName ({el /cells/CellGroup_1/CellGroup_1_0/#/ar__218603037})
    move {tempChanName} {getpath {tempChanName} -head}ar
end

foreach tempChanName ({el /cells/CellGroup_1/CellGroup_1_0/#})
    //echo Resetting param Em to -0.07 on {tempChanName} 
    setfield {tempChanName} Em -0.07
end

foreach tempChanName ({el /cells/CellGroup_1/CellGroup_1_0/#/cad__-1909645461})
    move {tempChanName} {getpath {tempChanName} -head}cad
end


position /cells/CellGroup_1/CellGroup_1_0 3.043236E-5 1.08633E-5 9.220921E-5

str tempCompName

str tempCellName

str tempChanName

foreach tempCompName ({el /cells/CellGroup_1/#/#})
    if ({exists  {tempCompName}/cad})
        if ({exists  {tempCompName}/kc})
            addmsg {tempCompName}/cad {tempCompName}/kc CONCEN Ca
        end
        if ({exists  {tempCompName}/kahp_deeppyr})
            addmsg {tempCompName}/cad {tempCompName}/kahp_deeppyr CONCEN Ca
        end
    end
end

foreach tempCompName ({el /cells/CellGroup_1/#/#})
    if ({exists  {tempCompName}/cad})
        if ({exists  {tempCompName}/cal})
            addmsg {tempCompName}/cal {tempCompName}/cad I_Ca Ik
        end
    end
end

foreach tempCellName ({el /cells/CellGroup_1/#})
    foreach tempChanName ({el  {tempCellName}/#/kdr})
        setfield {tempChanName} Ek -0.095
    end

    foreach tempChanName ({el  {tempCellName}/#/km})
        setfield {tempChanName} Ek -0.095
    end

    foreach tempChanName ({el  {tempCellName}/#/ka})
        setfield {tempChanName} Ek -0.095
    end

    foreach tempChanName ({el  {tempCellName}/#/kc})
        setfield {tempChanName} Ek -0.095
    end

    foreach tempChanName ({el  {tempCellName}/#/kahp_deeppyr})
        setfield {tempChanName} Ek -0.095
    end

    foreach tempChanName ({el  {tempCellName}/#/k2})
        setfield {tempChanName} Ek -0.095
    end

end

foreach tempCellName ({el /cells/CellGroup_1/#})
    foreach tempChanName ({el  {tempCellName}/#/nap})
        setfield {tempChanName} Ek 0.05
    end

    foreach tempChanName ({el  {tempCellName}/#/naf})
        setfield {tempChanName} Ek 0.05
    end

end


create neutral /stim
create neutral /stim/pulse
create neutral /stim/rndspike
create pulsegen /stim/pulse/stim_Holding_Current_CellGroup_1_0

setfield ^ level1 -4.0E-10 width1 0.1 delay1 0.0 delay2 10000.0  
addmsg /stim/pulse/stim_Holding_Current_CellGroup_1_0 /cells/CellGroup_1/CellGroup_1_0/Seg0_comp_1 INJECT output

create pulsegen /stim/pulse/stim_Input_0_CellGroup_1_0

setfield ^ level1 8.0E-10 width1 0.4 delay1 0.099975 delay2 10000.0  
addmsg /stim/pulse/stim_Input_0_CellGroup_1_0 /cells/CellGroup_1/CellGroup_1_0/Seg0_comp_1 INJECT output

echo "----------- Specifying hsolve"

str cellName
foreach cellName ({el /cells/#/#})
    create hsolve {cellName}/solve
    setfield {cellName}/solve path {cellName}/#[][TYPE=compartment],{cellName}/#[][TYPE=symcompartment] comptmode 1
    setmethod {cellName}/solve 11
    setfield {cellName}/solve chanmode 0
    call {cellName}/solve SETUP
    reset
end
reset
echo "-----------Done specifying hsolve "


float dt = 2.5E-5
float duration = 0.5
int steps =  {round {{duration}/{dt}}}

setclock 0 {dt}
create neutral /plots


create xform /plots/CellGroup_1_v [500,100,400,400]  -title "Values of VOLTAGE (Vm) in /cells/CellGroup_1/CellGroup_1_0: C3D_107"
xshow /plots/CellGroup_1_v
create xgraph /plots/CellGroup_1_v/graph -xmin 0 -xmax {duration} -ymin -0.09 -ymax 0.05
addmsg /cells/CellGroup_1/CellGroup_1_0/Seg0_comp_1 /plots/CellGroup_1_v/graph PLOT Vm *...lGroup_1_0_Seg0_comp_1:Vm *black


if (!{exists /controls})
    create neutral /controls
end
create xform /controls/runControl [700, 20, 200, 140] -title "Run Controls: C3D_107"
xshow /controls/runControl

create xbutton /controls/runControl/RESET -script reset
str rerun
rerun = { strcat "step " {steps} }
create xbutton /controls/runControl/RUN -script {rerun}
create xbutton /controls/runControl/STOP -script stop

create xbutton /controls/runControl/QUIT -script quit


maxwarnings 400

reset
str simsDir
simsDir = "/media/data/Reduction_paper/Pyr_RS/simulations/"

str simReference
simReference = "C3D_107"

str targetDir
targetDir =  {strcat {simsDir} {simReference}}
targetDir =  {strcat {targetDir} {"/"}}

create neutral /fileout
str cellName
str compName
create neutral /fileout/cells
if (!{exists /fileout/cells/CellGroup_1})
    create neutral /fileout/cells/CellGroup_1
end

foreach cellName ({el /cells/CellGroup_1/#})
    if (!{exists /fileout{cellName}})
        create neutral /fileout{cellName}
    end

    ce {cellName}

    compName = {strcat {cellName} /Seg0_comp_1}
    str fileNameStr
    fileNameStr = {strcat {getpath {cellName} -tail} {".dat"} }
    create asc_file /fileout{compName}_100000_VOLTAGE
    setfield /fileout{compName}_100000_VOLTAGE    flush 1    leave_open 1    append 1 notime 1
    setfield /fileout{compName}_100000_VOLTAGE filename {strcat {targetDir} {fileNameStr}}
    
    addmsg {cellName}/Seg0_comp_1 /fileout{compName}_100000_VOLTAGE SAVE Vm  //  .. 
    call /fileout{compName}_100000_VOLTAGE OUT_OPEN
    call /fileout{compName}_100000_VOLTAGE OUT_WRITE {getfield {cellName}/Seg0_comp_1 Vm}

end



float factor = 1

if (units == "GENESIS SI Units")
    factor = 0.001
end


str tempCompName
str tempCellName
str tempCellGroupName

/* Now ion rev pots stored in ionProperties on each cell...

foreach tempCellGroupName ({el /cells/#})

foreach tempCellName ({el {tempCellGroupName}/#})

    float ek = -95

    if ({strcmp {getfield {tempCellName} celltype} "SupLTSInter"} == 0 || \
        {strcmp {getfield {tempCellName} celltype} "DeepLTSInter"} == 0 || \
        {strcmp {getfield {tempCellName} celltype} "DeepBasket"} == 0 || \
        {strcmp {getfield {tempCellName} celltype} "SupBasket"} == 0 || \
        {strcmp {getfield {tempCellName} celltype} "DeepAxAx"} == 0 || \
        {strcmp {getfield {tempCellName} celltype} "SupAxAx"} == 0 || \
        {strcmp {getfield {tempCellName} celltype} "L4SpinyStellate"} == 0 || \
        {strcmp {getfield {tempCellName} celltype} "nRT"} == 0 || \
        {strcmp {getfield {tempCellName} celltype} "nRT_minus75init"} == 0 )

        ek = -100
        echo "Changing ek to "  {ek*factor}  " in cell: " {tempCellName} " which is of type: "  {getfield {tempCellName} celltype}

    end

        foreach tempCompName ({el {tempCellName}/#})

            //echo "Checking comp: " {tempCompName}
            
            if ({exists {tempCompName}/km})
                setfield {tempCompName}/km Ek {ek*factor}
                //echo "Setting ek to: " {ek*factor} " in " {tempCompName}
            end
            if ({exists {tempCompName}/k2})
                setfield {tempCompName}/k2 Ek {ek*factor}
            end
            if ({exists {tempCompName}/ka})
                setfield {tempCompName}/ka Ek {ek*factor}
            end
            if ({exists {tempCompName}/ka_ib})
                setfield {tempCompName}/ka_ib Ek {ek*factor}
            end
            if ({exists {tempCompName}/kahp})
                setfield {tempCompName}/kahp Ek {ek*factor}
            end
            if ({exists {tempCompName}/kahp_deeppyr})
                setfield {tempCompName}/kahp_deeppyr Ek {ek*factor}
            end
            if ({exists {tempCompName}/kahp_slower})
                setfield {tempCompName}/kahp_slower Ek {ek*factor}
            end
            if ({exists {tempCompName}/kc})
                setfield {tempCompName}/kc Ek {ek*factor}
            end
            if ({exists {tempCompName}/kc_fast})
                setfield {tempCompName}/kc_fast Ek {ek*factor}
            end
            if ({exists {tempCompName}/kdr})
                setfield {tempCompName}/kdr Ek {ek*factor}
            end
            if ({exists {tempCompName}/kdr_fs})
                setfield {tempCompName}/kdr_fs Ek {ek*factor}
            end
            if ({exists {tempCompName}/km})
                setfield {tempCompName}/km Ek {ek*factor}
            end
            
        end

end
end

*/

reset
str someTempCompName

float restCa = 0
float initCa = 0


if ({exists  /cells/CG_CML})

    foreach someTempCompName ({el /cells/CG_CML/#/#})

         if ({exists  {someTempCompName}/cad})
	
            echo ""
            echo "Resetting Ca resting conc of: " {someTempCompName}/cad

            if (units == "GENESIS Physiological Units")
                setfield {someTempCompName}/cad C   {{initCa - restCa} / 1000000}
                setfield {someTempCompName}/cad Ca {initCa / 1000000}
            else
                setfield {someTempCompName}/cad C {initCa - restCa}
                setfield {someTempCompName}/cad Ca {initCa}
            end

            echo "Now, Ca = " {getfield {someTempCompName}/cad Ca }
            echo "Now, C = " {getfield {someTempCompName}/cad C }

            echo ""

        end

    end

end

str startTimeFile
str stopTimeFile
startTimeFile = {strcat {targetDir} {"starttime"}}
stopTimeFile = {strcat {targetDir} {"stoptime"}}
sh {strcat {"date +%s.%N > "} {startTimeFile}}

echo Starting sim: C3D_107 on {genesisCore} with dur: {duration} dt: {dt} and steps: {steps} (Crank-Nicholson num integration method (11), using hsolve: true, chanmode: 0)
date +%F__%T__%N
step {steps}

echo Finished simulation reference: C3D_107
date +%F__%T__%N

str fileElement
foreach fileElement ({el /fileout/cells/##[][TYPE=asc_file]})
end
foreach fileElement ({el /fileout/cells/##[][TYPE=event_tofile]})
    echo Closing {fileElement}

    call {fileElement} CLOSE
end

float i, timeAtStep
create asc_file /fileout/timefile
setfield /fileout/timefile    flush 1    leave_open 1    append 1  notime 1
setfield /fileout/timefile filename {strcat {targetDir} {"time.dat"}}
call /fileout/timefile OUT_OPEN
for (i = 0; i <= {steps}; i = i + 1)
    timeAtStep = {dt} * i
    call /fileout/timefile OUT_WRITE {timeAtStep} 
end

call /fileout/timefile FLUSH


sh {strcat {"date +%s.%N > "} {stopTimeFile}}

openfile {startTimeFile} r
openfile {stopTimeFile} r
float starttime = {readfile {startTimeFile}}  
float stoptime =  {readfile {stopTimeFile}}  
float runTime = {stoptime - starttime}  
echo Simulation took : {runTime} seconds  
closefile {startTimeFile} 
closefile {stopTimeFile} 


str hostnameFile
hostnameFile = {strcat {targetDir} {"hostname"}}
sh {strcat {"hostname > "} {hostnameFile}}
openfile {hostnameFile} r
str hostnamestr = {readfile {hostnameFile}}
closefile {hostnameFile}

str simPropsFile
simPropsFile = {strcat {targetDir} {"simulator.props"}}
openfile {simPropsFile} w
writefile {simPropsFile} "RealSimulationTime="{runTime}
writefile {simPropsFile} "Host="{hostnamestr}
closefile {simPropsFile} 
str chanName

    foreach chanName ( { el /cells/CGspinstell/CGspinstell_0/#/cad}  )

        	//showfield {chanName} *
	//echo {chanName} : {getfield {chanName} Ca}
    end

