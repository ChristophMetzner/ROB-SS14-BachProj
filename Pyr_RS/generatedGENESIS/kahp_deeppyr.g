

// **************************************************
// File generated by: neuroConstruct v1.5.2 
// **************************************************




// This is a GENESIS script file generated from a ChannelML v1.8.1 file
// The ChannelML file is mapped onto a tabchannel object


// Units of ChannelML file: Physiological Units, units of GENESIS file generated: SI Units

/*
    ChannelML file based on Traub et al. 2003
*/

function make_kahp_deeppyr

        /*
            Slow [Ca2+] dependent K AHP (afterhyperpolarization) conductance. Based on kahp from Traub et al 2003

            
Reference: Roger D. Traub, Eberhard H. Buhl, Tengis Gloveli, and Miles A. Whittington                
Fast Rhythmic Bursting Can Be Induced in Layer 2/3 Cortical Neurons by Enhancing Persistent Na+ Conductance or by Blocking BK Channels
J Neurophysiol 89: 909-921, 2003
            Pubmed: http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&db=pubmed&dopt=Abstract&list_uids=12574468

            
Reference: Roger D. Traub, Diego Contreras, Mark O. Cunningham, Hilary Murray, Fiona E. N. LeBeau, Anita Roopun, Andrea Bibbig, W. Bryan Wilent, Michael J. Higley, and Miles A. Whittington
Single-column thalamocortical network model exhibiting gamma oscillations, sleep spindles, and epileptogenic bursts.
J. Neurophysiol. 93, 2194-2232, 2005
            Pubmed: http://www.ncbi.nlm.nih.gov/pubmed/15525801?dopt=Abstract

        */
        

        str chanpath = "/library/kahp_deeppyr"

        if ({exists {chanpath}})
            return
        end
        
        create tabchannel {chanpath}
            

        setfield {chanpath} \ 
            Ek              -0.095 \
            Ik              0  \
            Zpower          1
        
        setfield {chanpath} \
            Gbar 1 \
            Gk              0 

        
        // No Q10 temperature adjustment found
        float temp_adj_m = 1
    

        float tab_divs = 1041

        // Channel is dependent on concentration of: Calcium, rate equations will involve variable: ca_conc
        float c
        float conc_min = 0
        float conc_max = 1000

        float dc = ({conc_max} - {conc_min})/{tab_divs}

        float ca_conc = {conc_min}

            


            
        call {chanpath} TABCREATE Z {tab_divs} {conc_min} {conc_max}
            

        for (c = 0; c <= ({tab_divs}); c = c + 1)
                    
            // Looking at rate: alpha
                

            float alpha
                
                        
            // Found a generic form of rate equation for alpha, using expression: ca_conc < 0.0001 ? ca_conc/0.01 : 0.01
            // Will translate this for GENESIS compatibility...
                    
            // Equation (and all ChannelML file values) in Physiological Units but this script in SI Units
            

            v = v * 1000 // temporarily set v to units of equation...
            
           // Equation depends on concentration, so converting that too... 
            ca_conc = ca_conc * 0.000001

            

            if (ca_conc < 0.0001 )
                alpha =  ca_conc/0.01 
            else
                alpha =  0.01
            end
        
            
            v = v * 0.001 // reset v
            ca_conc = ca_conc * 1000000 // resetting ca_conc 

            
            // Set correct units of alpha
            alpha = alpha * 1000

            
            // Looking at rate: beta
                

            float beta
                
                        
            // Found a generic form of rate equation for beta, using expression: 0.001
            // Will translate this for GENESIS compatibility...
                    
            // Equation (and all ChannelML file values) in Physiological Units but this script in SI Units
            

            v = v * 1000 // temporarily set v to units of equation...
            
           // Equation depends on concentration, so converting that too... 
            ca_conc = ca_conc * 0.000001

            beta = 0.001
            
            v = v * 0.001 // reset v
            ca_conc = ca_conc * 1000000 // resetting ca_conc 

            
            // Set correct units of beta
            beta = beta * 1000

            

            // Using the alpha and beta expressions to populate the tables

            float tau = 1/(temp_adj_m * (alpha + beta))
            
            setfield {chanpath} Z_A->table[{c}] {temp_adj_m * alpha}
            setfield {chanpath} Z_B->table[{c}] {temp_adj_m * (alpha + beta)}
                    ca_conc = ca_conc + dc
                
                
        end // end of for (c = 0; c <= ({tab_divs}); c = c + 1)
                
        setfield {chanpath} Z_conc 1
        setfield {chanpath} Z_A->calc_mode 1 Z_B->calc_mode 1
                    


end

